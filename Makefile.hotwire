# DIRAM Hotwire Components Build
# Builds parser, AST, and transformation features

# Include shared config
include Makefile.config

# Check for libxml2
XML_CFLAGS = $(shell xml2-config --cflags 2>/dev/null || echo "")
XML_LDFLAGS = $(shell xml2-config --libs 2>/dev/null || echo "")

# Hotwire sources
HOTWIRE_SRCS = \
    $(SRC_DIR)/core/parser/tokenizer.c \
    $(SRC_DIR)/core/parser/parser.c \
    $(SRC_DIR)/core/parser/ast.c \
    $(SRC_DIR)/core/hotwire/hotwire.c \
    $(SRC_DIR)/core/hotwire/asm_visitor.c \
    $(SRC_DIR)/core/hotwire/wasm_visitor.c

# Object files
HOTWIRE_OBJS = $(patsubst $(SRC_DIR)/%.c,$(OBJ_DIR)/%.o,$(HOTWIRE_SRCS))

# Target libraries
HOTWIRE_STATIC = $(LIB_DIR)/lib$(HOTWIRE_LIB_NAME).a
HOTWIRE_SHARED = $(LIB_DIR)/lib$(HOTWIRE_LIB_NAME).so

# Compiler flags with XML support
HOTWIRE_CFLAGS = $(CFLAGS) $(XML_CFLAGS) -DDIRAM_HOTWIRE_ENABLED

.PHONY: hotwire
hotwire: check-xml directories $(HOTWIRE_STATIC) $(HOTWIRE_SHARED)

.PHONY: directories
directories:
	@mkdir -p $(OBJ_DIR)/core/parser
	@mkdir -p $(OBJ_DIR)/core/hotwire

# Create stub files if missing (for initial build)
.PHONY: create-stubs
create-stubs:
	@mkdir -p $(SRC_DIR)/core/parser
	@mkdir -p $(SRC_DIR)/core/hotwire
	@for src in $(HOTWIRE_SRCS); do \
		if [ ! -f $$src ]; then \
			echo "/* Stub for $$src */" > $$src; \
			echo "#include <stdio.h>" >> $$src; \
		fi \
	done

# Pattern rule for hotwire objects
$(OBJ_DIR)/core/parser/%.o: $(SRC_DIR)/core/parser/%.c
	@echo "[CC HOTWIRE] $<"
	@$(CC) $(HOTWIRE_CFLAGS) $(INCLUDES) -c $< -o $@

$(OBJ_DIR)/core/hotwire/%.o: $(SRC_DIR)/core/hotwire/%.c
	@echo "[CC HOTWIRE] $<"
	@$(CC) $(HOTWIRE_CFLAGS) $(INCLUDES) -c $< -o $@

# Libraries
$(HOTWIRE_STATIC): $(HOTWIRE_OBJS)
	@echo "[AR] Building hotwire static library: $@"
	@$(AR) rcs $@ $^

$(HOTWIRE_SHARED): $(HOTWIRE_OBJS)
	@echo "[LD] Building hotwire shared library: $@"
	@$(CC) -shared -o $@ $^ $(XML_LDFLAGS)

.PHONY: check-xml
check-xml:
	@command -v xml2-config >/dev/null 2>&1 || \
		(echo "WARNING: libxml2 not found. Hotwire XML features disabled."; true)

.PHONY: clean
clean:
	@echo "[CLEAN] Hotwire components"
	@rm -f $(HOTWIRE_OBJS) $(HOTWIRE_STATIC) $(HOTWIRE_SHARED)